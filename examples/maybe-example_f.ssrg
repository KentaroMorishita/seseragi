 Maybe型と演算子のサンプル




 =============================================================================

 基本的なMaybe値

 =============================================================================


let someValue = Just 42

let nothingValue = Nothing





 =============================================================================

 ファンクター演算子 (<$>)

 =============================================================================




fn doublex :Int -> Int = x * 2


let doubled = double <$>
  someValue

let doubledNothing = double <$>
  nothingValue





 =============================================================================

 アプリカティブ演算子 (<*>)

 =============================================================================




fn addx :Int -> y :Int -> Int = x + y


let value1 = Just 10

let value2 = Just 5


let addResult = Just add <*>
  value1 <*>
  value2

let addWithNothing = Just add <*>
  value1 <*>
  nothingValue





 =============================================================================

 モナド演算子 (>>=)

 =============================================================================




fn safeDividex :Int -> y :Int -> Maybe<Int> = if y == 0 then Nothing else Just( x / y)


let chainResult = Just 20 >>=
  safeDivide 2 >>=
  safeDivide 2

let chainError = Just 20 >>=
  safeDivide 0 >>=
  safeDivide 2





