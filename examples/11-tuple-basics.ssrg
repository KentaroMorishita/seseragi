// Seseragi タプル機能のサンプル
// 基本的なタプルの作成と分解

show "=== Seseragi Tuple Basics ==="

// =============================================================================
// タプルの基本操作
// =============================================================================

show "--- Basic Tuple Operations ---"

// 2要素タプル（座標）
let point = (10, 20)
show "Point tuple created"

// 3要素タプル（人の情報）
let person = ("Alice", 25, true)
show "Person tuple created"

// タプル展開（分解）
let (x, y) = point
show "Point destructured:"
show x  // 10
show y  // 20

let (name, age, isActive) = person
show "Person destructured:"
show name      // "Alice"
show age       // 25
show isActive  // true

// =============================================================================
// ワイルドカードパターン
// =============================================================================

show "--- Wildcard Pattern Examples ---"

// 一部の要素だけ取得
let (firstName, _, _) = person
show "First name only:"
show firstName  // "Alice"

let (_, personAge, _) = person
show "Age only:"
show personAge  // 25

// =============================================================================
// タプルを使った関数
// =============================================================================

show "--- Functions with Tuples ---"

// タプルを返す関数（型注釈なしでテスト）
fn makeCoordinate x y = (x, y)

let coordinate = makeCoordinate 5 15
let (coordX, coordY) = coordinate
show "Coordinate created by function:"
show coordX  // 5
show coordY  // 15

// =============================================================================
// 複雑なタプル例
// =============================================================================

show "--- Complex Tuple Examples ---"

// 異なる型の混合
let mixedTuple = (42, "hello", true, 3.14)
let (num, str, flag, pi) = mixedTuple

show "Mixed tuple elements:"
show num   // 42
show str   // "hello"
show flag  // true
show pi    // 3.14

// ネストしたタプル（将来実装予定）
// let nested = ((1, 2), (3, 4))
// let ((a, b), (c, d)) = nested

show "=== Tuple Examples Complete ==="