// シンプルなメソッド呼び出しテスト

struct Point {
  x: Int,
  y: Int
}

impl Point {
  fn add self -> other: Point -> Point =
    Point { x: self.x + other.x, y: self.y + other.y }

  operator + self -> other: Point -> Point = self add other
}

struct Point3D {
  x: Int,
  y: Int,
  z: Int
}

impl Point3D {
  fn add self -> other: Point3D -> Point3D =
    Point3D { x: self.x + other.x, y: self.y + other.y, z: self.z + other.z }

  operator + self -> other: Point3D -> Point3D = self add other

  fn sub self -> other: Point3D -> Point3D =
    Point3D { x: self.x - other.x, y: self.y - other.y, z: self.z - other.z }

  operator - self -> other: Point3D -> Point3D = self sub other
}

let p1 = Point { x: 3, y: 4 }
let p2 = Point { x: 1, y: 2 }

// メソッド呼び出し構文
let p3 = p1 add p2

// 演算子オーバーロード構文
let p4 = p1 + p2

show p3
show p4

let p5 = Point3D { x: 1, y: 2, z: 3 }
let p6 = Point3D { x: 4, y: 5, z: 6 }

show $ p5 + p6
show $ p5 - p6

